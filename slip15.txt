slip 15:

question 1:


const { MongoClient } = require('mongodb');

const url = "mongodb://localhost:27017";
const dbName = "mydb"; // Replace with your actual DB name
const client = new MongoClient(url);

async function fetchCustomers() {
  try {
    await client.connect();
    console.log("Connected to MongoDB");

    const db = client.db(dbName);
    const collection = db.collection("students");

    const customers = await collection.find({}).toArray();

    console.log("Customer Records:");
    console.log(customers);
  } catch (err) {
    console.error("Error:", err);
  } finally {
    await client.close();
  }
}

fetchCustomers();

------------------------------------------------------------------------

question 2:

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Employee Registration Form</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
    }
    input, select, button {
      margin: 10px 0;
      padding: 8px;
      width: 100%;
      max-width: 400px;
    }
    label {
      font-weight: bold;
    }
  </style>
</head>
<body>

  <h2>Employee Registration Form</h2>

  <form onsubmit="return validateForm()">
    <label>Name:</label><br>
    <input type="text" id="name" placeholder="First and Last Name"><br>

    <label>Email ID:</label><br>
    <input type="text" id="email" placeholder="Email Address"><br>

    <label>Mobile No.:</label><br>
    <input type="text" id="mobile" placeholder="10-digit Mobile Number"><br>

    <label>Department:</label><br>
    <select id="department">
      <option value="">--Select Department--</option>
      <option value="HR">HR</option>
      <option value="IT">IT</option>
      <option value="Sales">Sales</option>
      <option value="Finance">Finance</option>
    </select><br>

    <label>Joining Date:</label><br>
    <input type="date" id="joiningDate"><br>

    <button type="submit">Register</button>
  </form>

  <script>
    function validateForm() {
      const name = document.getElementById("name").value.trim();
      const email = document.getElementById("email").value.trim();
      const mobile = document.getElementById("mobile").value.trim();
      const department = document.getElementById("department").value;
      const joiningDate = document.getElementById("joiningDate").value;

      const nameRegex = /^[A-Za-z\s]+$/; // Only alphabetic characters and spaces
      const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$/; // Email format
      const mobileRegex = /^[6-9]\d{9}$/; // 10 digit mobile number starting with 6-9

      if (!nameRegex.test(name)) {
        alert("Name must contain only alphabets and spaces.");
        return false;
      }

      if (!emailRegex.test(email)) {
        alert("Please enter a valid email address.");
        return false;
      }

      if (!mobileRegex.test(mobile)) {
        alert("Please enter a valid 10-digit mobile number (starting with 6-9).");
        return false;
      }

      if (department === "") {
        alert("Please select a department.");
        return false;
      }

      const today = new Date();
      const joiningDateObj = new Date(joiningDate);
      if (joiningDateObj > today) {
        alert("Joining date cannot be a future date.");
        return false;
      }

      alert("Registration successful!");
      return true;
    }
  </script>

</body>
</html>